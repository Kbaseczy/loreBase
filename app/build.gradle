apply plugin: 'com.android.application'

android {
    signingConfigs {
        //自動生成，在project structure 配置签名信息后自动生成
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.lorebase"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        flavorDimensions "versionCode"  //解决Flavor维度不一致，需要一致
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.releaseConfig
//            /*当我们的渠道包版本比较多时，可以自定义所打APK包名称，用以区分*/
//            /*Ex : terminal - > gradle assembleWandoujiaRelease*/
//            applicationVariants.all{
//                variant ->
//                    variant.outputs.each{
//                        output ->
//                            def outputFile = output.outputFile
//                            if(outputFile != null && outputFile.name.endsWith('.apk')){
//                                //输出apk名称
//                                def fileName = "app_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
//                                output.outputFile = new File(outputFile.parent,fileName)
//                            }
//                    }
//            }
        }
    }
    productFlavors {
        kuan {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "kuan"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        qh360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qh360"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }

    }
    /* productFlavors.all {
         flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
     }*/
    packagingOptions {
        exclude 'org/apache/http/version.properties'
        exclude 'org/apache/http/client/version.properties'

        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    buildToolsVersion '28.0.3'
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okio:okio:1.15.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'com.github.githubwing:ByeBurger:1.2.3'
    implementation 'com.github.LillteZheng:ViewPagerHelper:v0.8'
    //引导页开源库
    implementation 'com.squareup.picasso:picasso:2.3.2'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'
    //轮播图开源库
    implementation 'com.just.agentweb:agentweb:4.0.2'
    //AgentWeb
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    //圖片加載
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    //androidx的转移
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
    }
}

apply plugin: 'org.greenrobot.greendao'

greendao {
    schemaVersion 1//数据库版本号
    daoPackage 'com.example.lorebase.greenDao'//设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    //targetGenDirTest：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}
